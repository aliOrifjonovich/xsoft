import { NextIntlClientProvider } from "next-intl";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { getLocale, getMessages } from "next-intl/server";
import NextTopLoader from "nextjs-toploader";
import { UserInterface, UserProvider } from "@/providers/UserProvider";
import { Toaster } from "sonner";
import { cookies } from "next/headers";
import YandexMapScript from "@/components/YandexMapScript";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
async function fetchUserData() {
  const cookieStore = cookies();
  const token = (await cookieStore).get("token")?.value;

  if (token) {
    const response = await fetch(
      "https://carmanagement-1-rmyc.onrender.com/api/v1/request-user-data/",
      {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
        cache: "no-store",
      }
    );
    if (!response.ok) {
      console.error(
        "Failed to fetch user data:",
        response.status,
        response.statusText
      );
      return null;
    }
  
    return response.json();
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = await getLocale();
  const messages = await getMessages();
  const data = await fetchUserData();

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        suppressHydrationWarning
      >
        <NextIntlClientProvider messages={messages}>
          <UserProvider value={data?.result as UserInterface}>
            <NextTopLoader
              color="oklch(.551 .027 264.364)"
              showSpinner={false}
            />
            <YandexMapScript />
            {children}
            <Toaster />
          </UserProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
